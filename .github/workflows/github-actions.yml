name: PostgreSQL service example
on: push

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:16

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v4
        
      # Installs node  
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      # Run test cases 
      - name: Run test cases
        # Runs test cases
        run: npm run test
        # Environment variables used by the tests
        env:
          SALT_ROUNDS: 10
          NODE_ENV: test 
          POSTGRESDB_USER: postgres
          POSTGRESDB_ROOT_PASSWORD: admin
          POSTGRESDB_DB_HOST: localhost
          POSTGRESDB_LOCAL_PORT: 5432
          POSTGRESDB_DOCKER_PORT: 5432
          POSTGRESDB_DATABASE: test_database
          NODE_LOCAL_PORT: 6500
          NODE_DOCKER_PORT: 6500
